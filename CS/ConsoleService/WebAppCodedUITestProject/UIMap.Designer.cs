// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WebAppCodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertCheckColumns - Use 'AssertCheckColumnsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCheckColumns()
        {
            #region Variable Declarations
            WinEdit uIComputerEdit = this.UIIndexMozillaFirefoxWindow.UIComputerColumnHeader.UIComputerEdit;
            WinEdit uICounterValueEdit = this.UIIndexMozillaFirefoxWindow.UICounterValueColumnHeader.UICounterValueEdit;
            #endregion

            // Verify that the 'Name' property of 'Computer' text box equals 'Computer '
            Assert.AreEqual(this.AssertCheckColumnsExpectedValues.UIComputerEditName, uIComputerEdit.Name, "Name of column should be Computer.");

            // Verify that the 'Name' property of 'CounterValue' text box equals 'CounterValue '
            Assert.AreEqual(this.AssertCheckColumnsExpectedValues.UICounterValueEditName, uICounterValueEdit.Name, "Name of column should be CounterValue.");
        }
        
        #region Properties
        public virtual AssertCheckColumnsExpectedValues AssertCheckColumnsExpectedValues
        {
            get
            {
                if ((this.mAssertCheckColumnsExpectedValues == null))
                {
                    this.mAssertCheckColumnsExpectedValues = new AssertCheckColumnsExpectedValues();
                }
                return this.mAssertCheckColumnsExpectedValues;
            }
        }
        
        public UIIndexMozillaFirefoxWindow UIIndexMozillaFirefoxWindow
        {
            get
            {
                if ((this.mUIIndexMozillaFirefoxWindow == null))
                {
                    this.mUIIndexMozillaFirefoxWindow = new UIIndexMozillaFirefoxWindow();
                }
                return this.mUIIndexMozillaFirefoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertCheckColumnsExpectedValues mAssertCheckColumnsExpectedValues;
        
        private UIIndexMozillaFirefoxWindow mUIIndexMozillaFirefoxWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCheckColumns'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertCheckColumnsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Computer' text box equals 'Computer '
        /// </summary>
        public string UIComputerEditName = "Computer ";
        
        /// <summary>
        /// Verify that the 'Name' property of 'CounterValue' text box equals 'CounterValue '
        /// </summary>
        public string UICounterValueEditName = "CounterValue ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIIndexMozillaFirefoxWindow : WinWindow
    {
        
        public UIIndexMozillaFirefoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Index - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Index - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIComputerColumnHeader UIComputerColumnHeader
        {
            get
            {
                if ((this.mUIComputerColumnHeader == null))
                {
                    this.mUIComputerColumnHeader = new UIComputerColumnHeader(this);
                }
                return this.mUIComputerColumnHeader;
            }
        }
        
        public UICounterValueColumnHeader UICounterValueColumnHeader
        {
            get
            {
                if ((this.mUICounterValueColumnHeader == null))
                {
                    this.mUICounterValueColumnHeader = new UICounterValueColumnHeader(this);
                }
                return this.mUICounterValueColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private UIComputerColumnHeader mUIComputerColumnHeader;
        
        private UICounterValueColumnHeader mUICounterValueColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIComputerColumnHeader : WinColumnHeader
    {
        
        public UIComputerColumnHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Computer";
            this.WindowTitles.Add("Index - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIComputerEdit
        {
            get
            {
                if ((this.mUIComputerEdit == null))
                {
                    this.mUIComputerEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIComputerEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Computer ";
                    this.mUIComputerEdit.WindowTitles.Add("Index - Mozilla Firefox");
                    #endregion
                }
                return this.mUIComputerEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIComputerEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICounterValueColumnHeader : WinColumnHeader
    {
        
        public UICounterValueColumnHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "CounterValue";
            this.WindowTitles.Add("Index - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UICounterValueEdit
        {
            get
            {
                if ((this.mUICounterValueEdit == null))
                {
                    this.mUICounterValueEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICounterValueEdit.SearchProperties[WinEdit.PropertyNames.Name] = "CounterValue ";
                    this.mUICounterValueEdit.WindowTitles.Add("Index - Mozilla Firefox");
                    #endregion
                }
                return this.mUICounterValueEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICounterValueEdit;
        #endregion
    }
}
